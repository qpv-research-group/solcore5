name: Upload Python Package

on:
  release:
    types: [published]
  push:
    branches:
      - 'fix_deploy/*'

jobs:
  deploy_wheels:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Deploy wheels - Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Deploy wheels - Install dependencies
        run: |
          python -m pip install --upgrade setuptools wheel pip twine numpy

      - name: Deploy wheels - Build manylinux2014 binary wheels - py3.x - x86_64
        uses: RalfG/python-wheels-manylinux-build@v0.3.1-manylinux2014_x86_64
        with:
          python-versions: 'cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310'
          build-requirements: 'numpy'
          system-packages: 'gcc-gfortran'
          pre-build-command: 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib/; export SOLCORE_WITH_PDD=1'

      - name: Deploy wheels - Build manylinux2014 binary wheels - py3.x - i686
        uses: RalfG/python-wheels-manylinux-build@v0.3.1-manylinux2014_i686
        with:
          python-versions: 'cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310'
          build-requirements: 'numpy==1.21.4'
          system-packages: 'gcc-gfortran'
          pre-build-command: 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib/; export SOLCORE_WITH_PDD=1'

      - name: Publish wheels to PyPI
        env:
          TWINE_USERNAME: '__token__'
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          twine upload dist/*-manylinux*.whl
