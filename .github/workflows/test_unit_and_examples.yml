name: test_unit_and_examples

on:
  push:

  pull_request:
    
  # everyday at 3 am UTC
  schedule:
    - cron:  '0 3 * * *'

jobs:
  unit_testing:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies in Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt install -y gfortran ngspice python3-tk libboost-all-dev libopenblas-dev libfftw3-dev libsuitesparse-dev

    - name: Install system dependencies in MacOS
      if: matrix.os == 'macos-latest'
      run: |
        brew reinstall gfortran
        brew install ngspice

    - name: Install system dependencies in Windows
      if: matrix.os == 'windows-latest'
      run: choco install ngspice

    - name: Install python dependencies
      run: |
        python -m pip install --upgrade setuptools wheel pip twine
        python -m pip install -e .[dev]

    - name: Install S4 in Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        git clone https://github.com/phoebe-p/S4
        cd S4
        #make boost
        make S4_pyext
        cd ..
        rm -rf S4

    - name: Install Solcore Linux and MacOS
      if: matrix.os != 'windows-latest'
      run: python -m  pip install --no-deps --force-reinstall --install-option="--with_pdd" -e .

    - name: Install Solcore Windows
      if: matrix.os == 'windows-latest'
      env:
        FC: gfortran
        CC: gcc
      run: |
        echo "[build]`ncompiler=mingw32" | Out-File -Encoding ASCII ~/pydistutils.cfg
        python -m pip install --no-deps --force-reinstall --install-option="--with_pdd" -e .
      shell: powershell

    - name: Unit and functional tests (Linux and MacOS)
      if: matrix.os != 'windows-latest'
      env:
        SOLCORE_SPICE: ngspice
      run: |
        pytest -r a -v --cov=solcore/ --ignore tests/test_examples.py -n "auto"

    - name: Unit and functional tests (Windows)
      if: matrix.os == 'windows-latest'
      env:
        SOLCORE_SPICE: ngspice
      run: |
        pytest -r a -v --cov=solcore/ --ignore tests/test_examples.py --ignore tests/test__pdd.py -n "auto"

    - name: Codecov
      if: matrix.os == 'ubuntu-latest'
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        python -m pip install codecov
        codecov


  test_examples:
    if: github.event_name != 'push'
    needs: unit_testing
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8]
        exclude:
          - os: windows-latest
            python-version: 3.8

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies in Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt install -y gfortran ngspice python3-tk libboost-all-dev libopenblas-dev libfftw3-dev libsuitesparse-dev

    - name: Install system dependencies in MacOS
      if: matrix.os == 'macos-latest'
      run: |
        brew reinstall gfortran
        brew install ngspice

    - name: Install python dependencies
      run: |
        python -m pip install --upgrade setuptools wheel pip twine
        python -m pip install -e .[dev]

    - name: Install Solcore Linux and MacOS
      if: matrix.os != 'windows-latest'
      run: pip install --no-deps --force-reinstall --install-option="--with_pdd" -e .

    - name: Install Solcore Windows
      if: matrix.os == 'windows-latest'
      env:
        FC: gfortran
        CC: gcc
      run: |
        echo "[build]`ncompiler=mingw32" | Out-File -Encoding ASCII ~/pydistutils.cfg
        pip install --no-deps --force-reinstall --install-option="--with_pdd" -e .
      shell: powershell

    - name: Test examples Linux and MacOS
      if: matrix.os != 'windows-latest'
      env:
        SOLCORE_SPICE: ngspice
      run: |
        pytest -r a -v tests/test_examples.py -n "auto"

    - name: Test examples Windows
      if: matrix.os == 'windows-latest'
      run: |
        pytest -r a -v tests/test_examples.py -n "auto"
